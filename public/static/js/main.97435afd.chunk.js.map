{"version":3,"sources":["redux/Tab/tabActionTypes.js","redux/Tab/tabReducer.js","redux/Tab/contentReducer.js","redux/store.js","components/HeaderComponent.js","baseUrl.js","components/TabComponent.js","components/HomeComponent.js","redux/Tab/tabAction.js","App.js","reportWebVitals.js","index.js"],"names":["CHANGE_TAB_NO","CHANGE_CONTENT","initialState","tabNo","img","store","createStore","combineReducers","tabs","state","action","type","payload","contents","applyMiddleware","thunk","logger","Header","props","className","baseUrl","TabContent","imgname","src","alt","Home","handleChange","e","nam","target","name","val","value","setState","createAndDownloadPdf","axios","post","then","get","responseType","res","pdfBlob","Blob","data","saveAs","isModalOpen","senderemail","password","receiveremail","toggleModal","bind","handleSubmit","handleFormSubmit","this","changeTabNo","preventDefault","form","alert","index","temp","changeContent","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","for","Input","onChange","Button","content","Component","connect","dispatch","App","HomeComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97435afd.chunk.js","sourcesContent":["export const CHANGE_TAB_NO='CHANGE_TAB_NO'\r\nexport const CHANGE_CONTENT='CHANGE_CONTENT'","import { CHANGE_TAB_NO} from \"./tabActionTypes\";\r\n\r\nconst initialState={\r\n    tabNo:1\r\n}\r\n\r\nexport const tabReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case CHANGE_TAB_NO:\r\n            return{\r\n                ...state,\r\n                tabNo:action.payload\r\n            }\r\n\r\n        default:\r\n              return state\r\n    }\r\n}","import { CHANGE_CONTENT} from \"./tabActionTypes\";\r\n\r\nconst initialState={\r\n    img:'img1'\r\n}\r\n\r\nexport const contentReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case CHANGE_CONTENT:\r\n            return{\r\n                ...state,\r\n                img:action.payload\r\n            }\r\n\r\n        default:\r\n              return state\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {tabReducer} from './Tab/tabReducer'\r\nimport {contentReducer} from './Tab/contentReducer'\r\n\r\nconst store=createStore(\r\n        combineReducers({\r\n            tabs:tabReducer,\r\n            contents:contentReducer\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    )\r\n// const store = createStore(tabReducer)\r\n\r\n\r\nexport default store","import React from 'react'\r\n\r\nfunction Header(props){\r\n    return(\r\n        <div className=\" row-header navbar-dark\">\r\n\r\n            <h2>Analysis Tab-{props.tabNo}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","export const baseUrl='https://test-casestudy-app.herokuapp.com/image/';","import React from \"react\";\r\nimport {baseUrl} from \"../baseUrl\";\r\nfunction TabContent(props){\r\n    if(props.imgname==='img1'){\r\n            return (\r\n                <div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <img src={baseUrl+'img1.png'} alt ={props.imgname}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n    }\r\n    else if(props.imgname==='img2'){\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <img src={baseUrl+'img2.png'} alt ={props.imgname}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <img src={baseUrl+'img3.png'} alt ={props.imgname}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TabContent;\r\n","import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport {changeTabNo,changeContent} from \"../redux\";\r\nimport {connect} from \"react-redux\";\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport TabContent from \"./TabComponent\";\r\nimport axios from 'axios';\r\nimport{saveAs} from 'file-saver'\r\nimport { Form,Button,FormGroup,Input,Label, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\n\r\n\r\n\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        tabNo:state.tabs.tabNo,\r\n        content:state.contents.img\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    changeTabNo:(tabNo)=>{dispatch(changeTabNo(tabNo))},\r\n    changeContent:(content)=>dispatch(changeContent(content))\r\n})\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            senderemail:'',\r\n            password:'',\r\n            receiveremail:''\r\n\r\n          };\r\n          this.toggleModal = this.toggleModal.bind(this);\r\n         this.handleSubmit = this.handleSubmit.bind(this);\r\n          this.handleChange=this.handleChange.bind(this);\r\n          this.handleFormSubmit=this.handleFormSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.changeTabNo();\r\n      }\r\n    \r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n        \r\n      }\r\n\r\n      handleChange=e=>{\r\n        let nam = e.target.name;\r\n        let val = e.target.value;\r\n        this.setState({[nam]: val});\r\n      }\r\n      \r\n       async handleFormSubmit(e){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n          });\r\n           e.preventDefault()\r\n          const senderemail=this.state.senderemail;\r\n          const password=this.state.password;\r\n          const receiveremail=this.state.receiveremail\r\n      const form= await axios.post('/api/form',{senderemail,password,receiveremail})\r\n        alert(form.data)\r\n          \r\n    }\r\n\r\n      handleSubmit(index){\r\n          this.props.changeTabNo(index);\r\n          var temp='img1';\r\n          if(index===1){\r\n              temp='img1';\r\n          }\r\n          else if(index===2){\r\n              temp='img2';\r\n          }\r\n          else\r\n            temp='img3';\r\n            this.props.changeContent(temp);\r\n      }\r\n\r\n      createAndDownloadPdf=()=>{\r\n          axios.post('/create-pdf')\r\n            .then(() => axios.get('fetch-pdf', { responseType: 'blob' }))\r\n                .then((res) => {\r\n                    const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\r\n\r\n                    saveAs(pdfBlob, 'newPdf.pdf');\r\n                })\r\n      }\r\n     \r\n      render(){\r\n          return (\r\n              <div>\r\n                <Header tabNo={this.props.tabNo}/>\r\n                <div className=\"row\">\r\n                        <button className=\"transparent-btn\" onClick={()=>this.handleSubmit(1)}>Analysis 1</button>\r\n                        <button className=\"transparent-btn\" onClick={()=>this.handleSubmit(2)}>Analysis 2</button>\r\n                        <button className=\"transparent-btn\" onClick={()=>this.handleSubmit(3)}>Analysis 3</button>\r\n                </div>\r\n                <div className=\"row middlestrip\">\r\n                    <div className=\"col\">\r\n                    <div className=\"btn\">\r\n                        <button onClick={this.toggleModal}>Share</button>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader>Share</ModalHeader>\r\n                        <ModalBody>\r\n                        <Form onSubmit={this.handleFormSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"senderemail\">Sender's Email(Note:Access by less secure apps must be on for this email)</Label>\r\n                                    <Input\r\n                                        type=\"email\"\r\n                                        name=\"senderemail\"\r\n                                        onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password\">Password</Label>\r\n                                    <Input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"receiveremail\">Reciever's Email</Label>\r\n                                    <Input\r\n                                        type=\"email\"\r\n                                        name=\"receiveremail\"\r\n                                        onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <Button>Submit</Button>\r\n                            </Form>\r\n                        </ModalBody>\r\n                        </Modal>\r\n                    </div>\r\n                    <div className='btn'>\r\n                    <button onClick={this.createAndDownloadPdf}>PDF</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <TabContent imgname={this.props.content}/>\r\n              </div>\r\n          )\r\n      }\r\n}\r\n export default connect(mapStateToProps,mapDispatchToProps)(Home)","import {CHANGE_TAB_NO,CHANGE_CONTENT} from \"./tabActionTypes\";\r\nexport const changeTabNo=(tabNo=1)=>{\r\n    return {\r\n        type:CHANGE_TAB_NO,\r\n        payload:tabNo\r\n    }\r\n}\r\n\r\nexport const changeContent=(content='img1')=>{\r\n    return {\r\n        type:CHANGE_CONTENT,\r\n        payload:content\r\n    }\r\n}","import React from \"react\";\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport HomeComponent from './components/HomeComponent'\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <div>\n          <HomeComponent />\n        </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}